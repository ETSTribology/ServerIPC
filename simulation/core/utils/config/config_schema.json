{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "Simulation Configuration Schema",
    "type": "object",
    "description": "Schema for validating the simulation configuration.",
    "properties": {
        "name": {
            "type": "string",
            "description": "A descriptive name for the simulation configuration."
        },
        "inputs": {
            "type": "array",
            "minItems": 1,
            "description": "List of input meshes and their associated configurations.",
            "items": {
                "type": "object",
                "properties": {
                    "path": {
                        "type": "string",
                        "description": "File path to the mesh used in the simulation."
                    },
                    "percent_fixed": {
                        "type": "number",
                        "minimum": 0,
                        "maximum": 100,
                        "description": "Percentage of nodes in the mesh that are fixed in place."
                    },
                    "material": {
                        "type": "string",
                        "description": "Name of the material to be applied to this mesh, referencing the 'materials' section."
                    },
                    "transform": {
                        "type": "object",
                        "description": "Transformation parameters to apply to the mesh.",
                        "properties": {
                            "scale": {
                                "type": "array",
                                "items": { "type": "number" },
                                "minItems": 3,
                                "maxItems": 3,
                                "description": "Scaling factors along the X, Y, and Z axes."
                            },
                            "rotation": {
                                "type": "array",
                                "items": { "type": "number" },
                                "minItems": 4,
                                "maxItems": 4,
                                "description": "Rotation represented as a quaternion [x, y, z, w]."
                            },
                            "translation": {
                                "type": "array",
                                "items": { "type": "number" },
                                "minItems": 3,
                                "maxItems": 3,
                                "description": "Translation offsets along the X, Y, and Z axes."
                            }
                        },
                        "required": ["scale", "rotation", "translation"],
                        "additionalProperties": false
                    },
                    "force": {
                        "type": "object",
                        "description": "Force parameters applied to the mesh.",
                        "properties": {
                            "gravity": {
                                "type": "number",
                                "minimum": 0,
                                "description": "Acceleration due to gravity affecting the mesh."
                            },
                            "top_force": {
                                "type": "number",
                                "description": "Magnitude of the force applied at the top of the mesh."
                            },
                            "side_force": {
                                "type": "number",
                                "description": "Magnitude of the force applied to the sides of the mesh."
                            }
                        },
                        "required": ["gravity", "top_force", "side_force"],
                        "additionalProperties": false
                    }
                },
                "required": ["path", "percent_fixed", "material", "transform", "force"],
                "additionalProperties": false
            }
        },
        "materials": {
            "type": "array",
            "minItems": 1,
            "description": "List of materials with their physical properties.",
            "items": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Unique identifier for the material."
                    },
                    "density": {
                        "type": "number",
                        "minimum": 0,
                        "description": "Density of the material in kg/mÂ³."
                    },
                    "young_modulus": {
                        "type": "number",
                        "minimum": 0,
                        "description": "Young's Modulus of the material in Pascals (Pa)."
                    },
                    "poisson_ratio": {
                        "type": "number",
                        "minimum": 0,
                        "maximum": 0.5,
                        "description": "Poisson's Ratio of the material, typically between 0 and 0.5."
                    },
                    "color": {
                        "type": "array",
                        "items": {
                            "type": "number",
                            "minimum": 0,
                            "maximum": 255
                        },
                        "minItems": 4,
                        "maxItems": 4,
                        "description": "RGBA color representation for visualization [Red, Green, Blue, Alpha]."
                    }
                },
                "required": ["name", "density", "young_modulus", "poisson_ratio", "color"],
                "additionalProperties": false
            }
        },
        "friction": {
            "type": "object",
            "description": "Friction-related parameters for the simulation.",
            "properties": {
                "friction_coefficient": {
                    "type": "number",
                    "minimum": 0,
                    "maximum": 1,
                    "description": "Coefficient of friction between contacting surfaces."
                },
                "damping_coefficient": {
                    "type": "number",
                    "minimum": 0,
                    "description": "Damping factor to control energy dissipation."
                }
            },
            "required": ["friction_coefficient", "damping_coefficient"],
            "additionalProperties": false
        },
        "simulation": {
            "type": "object",
            "description": "General simulation parameters.",
            "properties": {
                "dhat": {
                    "type": "number",
                    "minimum": 0,
                    "description": "Collision detection threshold distance."
                },
                "dmin": {
                    "type": "number",
                    "minimum": 0,
                    "description": "Minimum allowable distance between objects to prevent penetration."
                },
                "dt": {
                    "type": "number",
                    "minimum": 0,
                    "description": "Time step size for the simulation (in seconds)."
                }
            },
            "required": ["dhat", "dmin", "dt"],
            "additionalProperties": false
        },
        "communication": {
            "type": "object",
            "description": "Inter-process communication settings.",
            "properties": {
                "method": {
                    "type": "string",
                    "enum": ["redis", "websocket", "grpc"],
                    "description": "Communication method to be used for inter-process communication."
                },
                "settings": {
                    "type": "object",
                    "description": "Settings specific to the chosen communication method.",
                    "properties": {
                        "redis": {
                            "type": "object",
                            "description": "Configuration parameters for Redis communication.",
                            "properties": {
                                "host": {
                                    "type": "string",
                                    "description": "Hostname or IP address of the Redis server."
                                },
                                "port": {
                                    "type": "integer",
                                    "minimum": 1,
                                    "maximum": 65535,
                                    "description": "Port number on which the Redis server is listening."
                                },
                                "db": {
                                    "type": "integer",
                                    "minimum": 0,
                                    "description": "Redis database number to connect to."
                                },
                                "password": {
                                    "type": ["string", "null"],
                                    "description": "Password for authenticating with the Redis server, if required."
                                }
                            },
                            "required": ["host", "port", "db"],
                            "additionalProperties": false
                        },
                        "websocket": {
                            "type": "object",
                            "description": "Configuration parameters for WebSocket communication.",
                            "properties": {
                                "uri": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "WebSocket server URI."
                                },
                                "serializer_method": {
                                    "type": "string",
                                    "enum": ["json", "pickle", "bson"],
                                    "description": "Serialization method used for data interchange over WebSocket."
                                }
                            },
                            "required": ["uri", "serializer_method"],
                            "additionalProperties": false
                        },
                        "grpc": {
                            "type": "object",
                            "description": "Configuration parameters for gRPC communication.",
                            "properties": {
                                "host": {
                                    "type": "string",
                                    "description": "Hostname or IP address of the gRPC server."
                                },
                                "port": {
                                    "type": "integer",
                                    "minimum": 1,
                                    "maximum": 65535,
                                    "description": "Port number on which the gRPC server is listening."
                                },
                                "serializer_method": {
                                    "type": "string",
                                    "enum": ["json", "pickle", "bson"],
                                    "description": "Serialization method used for data interchange over gRPC."
                                }
                            },
                            "required": ["host", "port", "serializer_method"],
                            "additionalProperties": false
                        }
                    },
                    "required": ["redis", "websocket", "grpc"],
                    "additionalProperties": false
                }
            },
            "required": ["method", "settings"],
            "additionalProperties": false
        },
        "serialization": {
            "type": "object",
            "description": "Data serialization settings.",
            "properties": {
                "default_method": {
                    "type": "string",
                    "enum": ["json", "pickle", "bson"],
                    "description": "Default serialization method for data interchange."
                }
            },
            "required": ["default_method"],
            "additionalProperties": false
        },
        "optimizer": {
            "type": "object",
            "description": "Optimizer settings for the simulation.",
            "properties": {
                "type": {
                    "type": "string",
                    "enum": ["newton", "gradient_descent", "conjugate_gradient"],
                    "description": "Type of optimization algorithm to use."
                },
                "params": {
                    "type": "object",
                    "description": "Parameters specific to the chosen optimizer.",
                    "properties": {
                        "max_iterations": {
                            "type": "integer",
                            "minimum": 1,
                            "description": "Maximum number of iterations the optimizer will perform."
                        },
                        "rtol": {
                            "type": "number",
                            "minimum": 0.0,
                            "maximum": 1.0,
                            "description": "Relative tolerance for the convergence criterion."
                        },
                        "n_threads": {
                            "type": "integer",
                            "minimum": 1,
                            "description": "Number of threads to utilize for parallel computations."
                        },
                        "reg_param": {
                            "type": "number",
                            "minimum": 0.0,
                            "description": "Regularization parameter to prevent overfitting or ill-conditioning."
                        },
                        "m": {
                            "type": "integer",
                            "minimum": 1,
                            "description": "Memory parameter for algorithms that require it (e.g., L-BFGS)."
                        }
                    },
                    "required": ["max_iterations", "rtol", "n_threads", "reg_param", "m"],
                    "additionalProperties": false
                }
            },
            "required": ["type", "params"],
            "additionalProperties": false
        },
        "linear_solver": {
            "type": "object",
            "description": "Linear solver settings for the simulation.",
            "properties": {
                "type": {
                    "type": "string",
                    "enum": ["ldlt", "cg", "gmres"],
                    "description": "Type of linear solver algorithm to use."
                },
                "params": {
                    "type": "object",
                    "description": "Parameters specific to the chosen linear solver.",
                    "properties": {
                        "tolerance": {
                            "type": "number",
                            "minimum": 1e-12,
                            "description": "Convergence tolerance for the linear solver."
                        },
                        "max_iterations": {
                            "type": "integer",
                            "minimum": 1,
                            "description": "Maximum number of iterations the linear solver will perform."
                        }
                    },
                    "required": ["tolerance", "max_iterations"],
                    "additionalProperties": false
                }
            },
            "required": ["type", "params"],
            "additionalProperties": false
        },
        "ipc": {
            "type": "object",
            "description": "Inter-Process Communication (IPC) settings.",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Flag to enable or disable IPC mechanisms."
                },
                "method": {
                    "type": "string",
                    "description": "Method used for IPC when enabled."
                },
                "params": {
                    "type": "object",
                    "description": "Parameters specific to the chosen IPC method."
                }
            },
            "required": ["enabled", "method", "params"],
            "additionalProperties": false
        },
        "initial_conditions": {
            "type": "object",
            "description": "Initial conditions for the simulation.",
            "properties": {
                "gravity": {
                    "type": "number",
                    "minimum": 0.0,
                    "description": "Acceleration due to gravity applied to the simulation."
                }
            },
            "required": ["gravity"],
            "additionalProperties": false
        },
        "logging": {
            "type": "object",
            "description": "Logging configuration settings.",
            "properties": {
                "level": {
                    "type": "string",
                    "enum": ["DEBUG", "INFO", "WARNING", "ERROR", "CRITICAL"],
                    "description": "Logging level to control the verbosity of log outputs."
                },
                "format": {
                    "type": "string",
                    "description": "Format string defining the layout of log messages."
                },
                "handlers": {
                    "type": "object",
                    "description": "Handlers defining where log messages are output.",
                    "properties": {
                        "console": {
                            "type": "object",
                            "description": "Configuration for the console (stdout) log handler.",
                            "properties": {
                                "class": {
                                    "type": "string",
                                    "description": "Python logging handler class for console output (e.g., 'logging.StreamHandler')."
                                },
                                "level": {
                                    "type": "string",
                                    "enum": ["DEBUG", "INFO", "WARNING", "ERROR", "CRITICAL"],
                                    "description": "Logging level for the console handler."
                                },
                                "formatter": {
                                    "type": "string",
                                    "description": "Formatter to use for log messages in the console."
                                },
                                "stream": {
                                    "type": "string",
                                    "description": "Stream to which log messages are sent (e.g., 'ext://sys.stdout').",
                                    "default": "ext://sys.stdout"
                                }
                            },
                            "required": ["class", "level", "formatter"],
                            "additionalProperties": false
                        },
                        "file": {
                            "type": "object",
                            "description": "Configuration for the file log handler.",
                            "properties": {
                                "class": {
                                    "type": "string",
                                    "description": "Python logging handler class for file output (e.g., 'logging.FileHandler', 'logging.handlers.RotatingFileHandler')."
                                },
                                "level": {
                                    "type": "string",
                                    "enum": ["DEBUG", "INFO", "WARNING", "ERROR", "CRITICAL"],
                                    "description": "Logging level for the file handler."
                                },
                                "formatter": {
                                    "type": "string",
                                    "description": "Formatter to use for log messages in the file."
                                },
                                "filename": {
                                    "type": "string",
                                    "description": "File path where log messages will be written."
                                },
                                "maxBytes": {
                                    "type": "integer",
                                    "minimum": 1,
                                    "description": "Maximum size in bytes of the log file before it is rotated. Applicable for RotatingFileHandler."
                                },
                                "backupCount": {
                                    "type": "integer",
                                    "minimum": 0,
                                    "description": "Number of backup files to keep after rotation. Applicable for RotatingFileHandler."
                                },
                                "when": {
                                    "type": "string",
                                    "enum": ["S", "M", "H", "D", "W0", "W1", "W2", "W3", "W4", "midnight"],
                                    "description": "A string representing the type of interval. Applicable for TimedRotatingFileHandler."
                                },
                                "interval": {
                                    "type": "integer",
                                    "minimum": 1,
                                    "description": "Rotating interval. Applicable for TimedRotatingFileHandler."
                                }
                            },
                            "required": ["class", "level", "formatter", "filename"],
                            "additionalProperties": false
                        }
                    },
                    "required": ["console", "file"],
                    "additionalProperties": false
                }
            },
            "required": ["level", "format", "handlers"],
            "additionalProperties": false
        }
    },
    "required": [
        "name", "inputs", "materials", "friction", "simulation",
        "communication", "serialization", "optimizer", "linear_solver",
        "ipc", "initial_conditions", "logging"
    ],
    "additionalProperties": false
}
