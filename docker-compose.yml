services:
  # simulation:
  #   build: simulation
  #   container_name: simulation
  #   ports:
  #     - "50051:50051"
  #     - "8080:8080"
  #   depends_on:
  #     dragonfly:
  #       condition: service_healthy
  #     minio:
  #       condition: service_healthy
  #     surrealdb:
  #       condition: service_healthy
  #     timescaledb:
  #       condition: service_healthy
  #   environment:
  #     REDIS_HOST: dragonfly
  #     MINIO_HOST: minio
  #     MINIO_ROOT_USER: minioadmin
  #     MINIO_ROOT_PASSWORD: minioadminpassword
  #     POSTGRES_HOST: timescaledb
  #   volumes:
  #     - ./meshes:/app/meshes
  #     - ./scenario:/app/scenario
  #   deploy:
  #     resources:
  #       reservations:
  #         devices:
  #           - driver: nvidia
  #             count: 1
  #             capabilities: [gpu]
  #   healthcheck:
  #     test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
  #     interval: 30s
  #     timeout: 10s
  #     retries: 3
  #     start_period: 40s

  dragonfly:
    image: docker.dragonflydb.io/dragonflydb/dragonfly
    container_name: dragonfly
    ports:
      - "6379:6379"
    volumes:
      - dragonfly-data:/data
    networks:
      - simulation_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  minio:
    image: minio/minio
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadminpassword
    volumes:
      - minio_data:/data
      - minio_config:/root/.minio
    command: server /data --console-address ":9001"
    networks:
      - simulation_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9001/minio/health/live"]
      interval: 10s
      timeout: 5s
      retries: 3

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-piechart-panel
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - simulation_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  timescaledb:
    image: timescale/timescaledb-ha:pg17
    container_name: timescaledb
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: timescale
      POSTGRES_PASSWORD: timescalepassword
      POSTGRES_DB: timescale_db
      POSTGRES_INITDB_ARGS: "--extension=timescaledb"
    volumes:
      - timescaledb_data:/var/lib/postgresql/data
    networks:
      - simulation_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U timescale"]
      interval: 10s
      timeout: 5s
      retries: 3

volumes:
  dragonfly-data:
    driver: local
  minio_data:
    driver: local
  minio_config:
    driver: local
  timescaledb_data:
    driver: local
  grafana_data:
    driver: local


networks:
  simulation_network:
    driver: bridge